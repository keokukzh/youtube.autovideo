name: Deploy

on:
    push:
        branches: [main]
    workflow_dispatch:
        inputs:
            environment:
                description: "Environment to deploy to"
                required: true
                default: "production"
                type: choice
                options:
                    - production
                    - staging

env:
    VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
    VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
    deploy:
        runs-on: ubuntu-latest
        environment: ${{ github.event.inputs.environment || 'production' }}

        steps:
            - name: Checkout code
              uses: actions/checkout@v5

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "20.x"
                  cache: "npm"

            - name: Install dependencies
              run: npm ci

            - name: Run tests
              run: npm run test:ci

            - name: Build application
              run: npm run build

            - name: Deploy to Vercel
              uses: amondnet/vercel-action@v25
              with:
                  vercel-token: ${{ secrets.VERCEL_TOKEN }}
                  vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
                  vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
                  vercel-args: "--prod"
                  working-directory: ./

            - name: Run Lighthouse CI
              uses: treosh/lighthouse-ci-action@v10
              with:
                  configPath: "./lighthouse.config.js"
                  uploadArtifacts: true
                  temporaryPublicStorage: true

    notify:
        runs-on: ubuntu-latest
        needs: deploy
        if: always()

        steps:
            - name: Notify deployment status
              uses: 8398a7/action-slack@v3
              with:
                  status: ${{ job.status }}
                  channel: "#deployments"
                  webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
              if: env.SLACK_WEBHOOK_URL != ''
